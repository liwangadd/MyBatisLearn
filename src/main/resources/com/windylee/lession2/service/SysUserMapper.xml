<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.windylee.lession2.service.SysUserMapper">
    <resultMap id="userMap" type="com.windylee.lession2.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap extends="userMap" id="ResultMapWithBLOBs" type="com.windylee.lession2.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo"/>
        <result column="head_img" jdbcType="LONGVARBINARY" property="headImg"/>
    </resultMap>

    <!--<resultMap id="userRoleMap" type="com.windylee.lession2.entity.SysUser">-->
    <!--<id property="userName" column="user_name"/>-->
    <!--<result property="userPassword" column="user_password"/>-->
    <!--<result property="userEmail" column="user_email"/>-->
    <!--<result property="userInfo" column="user_info"/>-->
    <!--<result property="headImg" column="head_img" jdbcType="BLOB"/>-->
    <!--<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>-->
    <!--<result property="role.id" column="role_id"/>-->
    <!--<result property="role.roleName" column="role_name"/>-->
    <!--<result property="role.enabled" column="enabled"/>-->
    <!--<result property="role.createBy" column="create_by"/>-->
    <!--<result property="role.createTime" column="role_create_time"/>-->
    <!--</resultMap>-->


    <!--<resultMap id="userRoleMap" type="com.windylee.lession2.entity.SysUser"-->
    <!--extends="userMap">-->
    <!--<result property="role.id" column="role_id"/>-->
    <!--<result property="role.roleName" column="role_name"/>-->
    <!--<result property="role.enabled" column="enabled"/>-->
    <!--<result property="role.createBy" column="create_by"/>-->
    <!--<result property="role.createTime" column="role_create_time"/>-->
    <!--</resultMap>-->


    <!--<resultMap id="userRoleMap" type="com.windylee.lession2.entity.SysUser"-->
    <!--extends="userMap">-->
    <!--<association property="role" columnPrefix="role_"-->
    <!--javaType="com.windylee.lession2.entity.SysRole">-->
    <!--<result property="id" column="role_id"/>-->
    <!--<result property="roleName" column="role_name"/>-->
    <!--<result property="enabled" column="enabled"/>-->
    <!--<result property="createBy" column="create_by"/>-->
    <!--<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>-->
    <!--</association>-->
    <!--</resultMap>-->

    <resultMap id="userRoleMap" type="com.windylee.lession2.entity.SysUser"
               extends="userMap">
        <association property="role" columnPrefix="role_" resultMap="com.windylee.lession2.service.SysRoleMapper.roleMap"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, user_name, user_password, user_email, create_time
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        user_info, head_img
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.windylee.lession2.entity.SysUserExample"
            resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.windylee.lession2.entity.SysUserExample" resultMap="userMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.windylee.lession2.entity.SysUserExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertSelective" parameterType="com.windylee.lession2.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="userInfo != null">
                user_info,
            </if>
            <if test="headImg != null">
                head_img,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=BIGINT},
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userInfo != null">
                #{userInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.windylee.lession2.entity.SysUserExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.userPassword != null">
                user_password = #{record.userPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.userEmail != null">
                user_email = #{record.userEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userInfo != null">
                user_info = #{record.userInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.headImg != null">
                head_img = #{record.headImg,jdbcType=LONGVARBINARY},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        set id = #{record.id,jdbcType=BIGINT},
        user_name = #{record.userName,jdbcType=VARCHAR},
        user_password = #{record.userPassword,jdbcType=VARCHAR},
        user_email = #{record.userEmail,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        user_info = #{record.userInfo,jdbcType=LONGVARCHAR},
        head_img = #{record.headImg,jdbcType=LONGVARBINARY}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        set id = #{record.id,jdbcType=BIGINT},
        user_name = #{record.userName,jdbcType=VARCHAR},
        user_password = #{record.userPassword,jdbcType=VARCHAR},
        user_email = #{record.userEmail,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.windylee.lession2.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userInfo != null">
                user_info = #{userInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="headImg != null">
                head_img = #{headImg,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.windylee.lession2.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_email = #{userEmail,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        user_info = #{userInfo,jdbcType=LONGVARCHAR},
        head_img = #{headImg,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.windylee.lession2.entity.SysUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_email = #{userEmail,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectById" resultMap="userMap">
        SELECT * FROM sys_user WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="userMap">
        SELECT id, user_name, user_password, user_email, user_info, head_img, create_time FROM sys_user
    </select>

    <select id="selectRolesByUserId" resultType="com.windylee.lession2.entity.SysRole">
        SELECT r.id, r.role_name, r.enabled, r.create_by, r.create_time, u.user_name as "user.userName", u.user_email as "user.userEmail"
        FROM sys_user u JOIN sys_user_role ur ON u.id = ur.user_id
        JOIN sys_role r ON ur.role_id = r.id WHERE u.id = #{userId}
    </select>

    <!-- -where标签的作用，用于生成sql语句中的where子句，如果标签包含-->
    <!--的元素有返回值，就插入一个where；如果where后面的字符串是以and或or结尾的，就将他们删除-->
    <select id="selectByUser" resultMap="userMap">
        SELECT id, user_name, user_password, user_email, user_info, head_img, create_time
        FROM sys_user
        <where>
            <if test="userName != null and userName != ''">

                <bind name="userNameLike" value="'%' + userName + '%'"/>
                AND user_name LIKE #{userNameLike}
            </if>
            <if test="userEmail != null and userEmail != ''">
                AND user_email LIKE concat('%', #{userEmail}, '%')
            </if>
        </where>
    </select>

    <!--<select id="selectByUser" resultMap="userMap">-->
    <!--SELECT id, user_name, user_password, user_email, user_info, head_img, create_time-->
    <!--FROM sys_user-->
    <!--WHERE 1 = 1-->
    <!--<if test="userName != null and userName != ''">-->
    <!--AND user_name like concat('%', #{userName}, '%')-->
    <!--</if>-->
    <!--<if test="userEmail != null and userEmail !=''">-->
    <!--AND user_email = #{userEmail}-->
    <!--</if>-->
    <!--</select>-->

    <select id="selectByIdList" resultMap="userMap">
        SELECT id, user_name, user_password, user_email, user_info, head_img, create_time
        FROM sys_user
        WHERE id IN
        <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
            #{id}
        </foreach>
    </select>

    <select id="selectByIdOrUserName" resultMap="userMap">
        SELECT id, user_name, user_password, user_email, user_info, head_img, create_time
        FROM sys_user
        WHERE 1 = 1
        <choose>
            <when test="id != null">
                AND id = #{id}
            </when>
            <when test="userName != null and userName != ''">
                AND user_name = #{userName}
            </when>
            <otherwise>
                AND 1 = 2
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO sys_user(id, user_name, user_password, user_email, user_info, head_img, create_time) VALUES (
        #{id}, #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(
        user_name, user_password,
        <if test="userEmail != null and userEmail != ''">
            user_email,
        </if>
        user_info, head_img, create_time)
        VALUES (
        #{userName}, #{userPassword},
        <if test="userEmail != null and userEmail != ''">
            #{userEmail},
        </if>
        #{userInfo}, #{headImg, jdbcType = BLOB}, #{createTime, jdbcType = TIMESTAMP}
        )
    </insert>

    <insert id="insert3">
        INSERT INTO sys_user(user_name, user_password, user_email, user_info, head_img, create_time) VALUES (
        #{userName}, #{userPassword}, #{userEmail}, #{userInfo}, #{headImg, jdbcType=BLOB},
        #{createTime, jdbcType=TIMESTAMP}
        )
        <selectKey keyColumn="id" keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(user_name, user_password, user_email, user_info, head_img, create_time)
        VALUES
        <foreach collection="list" item="user" separator=",">
            (
            #{user.userName}, #{user.userPassword}, #{user.userEmail}, #{user.userInfo}, #{user.headImg, jdbcType=BLOB},
            #{user.createTime, jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <update id="updateById">
        UPDATE sys_user
        SET user_name = #{userName}, user_password = #{userPassword}, user_email = #{userEmail}, user_info = #{userInfo},
        head_img = #{headImg, jdbcType=BLOB}, create_time = #{createTime, jdbcType=TIMESTAMP}
        WHERE id = #{id}
    </update>

    <!--set标签的作用，用于生成sql语句中的set子句，如果该标签包含的元素中有返回值，就插入一个set；-->
    <!--如果set后面的字符串是以逗号结尾的，就将这个逗号删除-->
    <update id="updateByIdSelective">
        UPDATE sys_user
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test="userInfo != null and userInfo != ''">
                user_info = #{userInfo},
            </if>
            <if test="headImg != null">
                head_img = #{headImg},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!--<update id="updateByIdSelective">-->
    <!--UPDATE sys_user-->
    <!--SET-->
    <!--<if test="userName != null and userName != ''">-->
    <!--user_name = #{userName},-->
    <!--</if>-->
    <!--<if test="userPassword != null and userPassword != ''">-->
    <!--user_password = #{userPassword},-->
    <!--</if>-->
    <!--<if test="userEmail != null and userEmail != ''">-->
    <!--user_email = #{userEmail},-->
    <!--</if>-->
    <!--<if test="userInfo != null and userInfo != ''">-->
    <!--user_info = #{userInfo},-->
    <!--</if>-->
    <!--<if test="headImg != null">-->
    <!--head_img = #{headImg, jdbcType = BLOB},-->
    <!--</if>-->
    <!--<if test="createTime != null">-->
    <!--create_time = #{createTime, jdbcType = TIMESTAMP},-->
    <!--</if>-->
    <!--id = #{id}-->
    <!--WHERE id = #{id}-->
    <!--</update>-->

    <update id="updateByMap">
        UPDATE sys_user
        SET
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM sys_user WHERE id = #{id}
    </delete>

    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.windylee.lession2.entity.SysRole">
        SELECT
        r.id, r.role_name, r.enabled, r.create_by, r.create_time
        FROM sys_user u
        JOIN sys_user_role ur on u.id = ur.user_id
        JOIN sys_role r on ur.role_id = r.id
        WHERE u.id = #{userId} AND r.enabled = #{enabled}
    </select>

    <select id="selectUserAndRoleById" resultType="com.windylee.lession2.entity.SysUser">
        SELECT
        u.id, u.user_name, u.user_password, u.user_info, u.head_img, u.create_time,
        r.role_name "role.roleName", r.enabled "role.enabled", r.create_by "role.create_by", r.create_time "role.createTime"
        FROM sys_user u
        JOIN sys_user_role ur ON ur.user_id = u.id
        JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectUserAndRoleById2" resultMap="userRoleMap">
        SELECT
        u.id, u.user_name, u.user_password, u.user_info, u.head_img, u.create_time,
        r.role_name, r.enabled, r.create_by, r.create_time "role_create_time"
        FROM sys_user u
        JOIN sys_user_role ur ON ur.user_id = u.id
        JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>

    <select id="selectUserAndRoleById3" resultMap="userRoleMap">
        SELECT
        u.id, u.user_name, u.user_password, u.user_info, u.head_img, u.create_time,
        r.role_name "role_role_name", r.enabled "role_enabled", r.create_by "role_create_by", r.create_time "role_create_time"
        FROM sys_user u
        JOIN sys_user_role ur ON ur.user_id = u.id
        JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>
</mapper>